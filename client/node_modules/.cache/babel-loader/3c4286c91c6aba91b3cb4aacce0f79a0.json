{"ast":null,"code":"//  ======================================== IMPORTS\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport Reducers from 'reducers'; //  ======================================== CONFIGURE STORE\n\nconst Store = configureStore({\n  reducer: Reducers,\n  middleware: getDefaultMiddleware()\n}); //  ========================================\n\nexport default Store;","map":{"version":3,"sources":["/home/datance/CODE/portfolio-shop-next/client/src/store.ts"],"names":["configureStore","getDefaultMiddleware","Reducers","Store","reducer","middleware"],"mappings":"AAAA;AACA,SAASA,cAAT,EAAyBC,oBAAzB,QAA6D,kBAA7D;AAEA,OAAOC,QAAP,MAAoC,UAApC,C,CAEA;;AACA,MAAMC,KAAK,GAAGH,cAAc,CAC5B;AACII,EAAAA,OAAO,EAAEF,QADb;AAEIG,EAAAA,UAAU,EAAEJ,oBAAoB;AAFpC,CAD4B,CAA5B,C,CAKA;;AAIA,eAAeE,KAAf","sourcesContent":["//  ======================================== IMPORTS\nimport { configureStore, getDefaultMiddleware, Action } from \"@reduxjs/toolkit\"\nimport { ThunkAction } from \"redux-thunk\"\nimport Reducers, { RootState } from 'reducers'\n\n//  ======================================== CONFIGURE STORE\nconst Store = configureStore(\n{\n    reducer: Reducers,\n    middleware: getDefaultMiddleware(),\n})\n//  ========================================\n\nexport type AppDispatch = typeof Store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>\nexport default Store"]},"metadata":{},"sourceType":"module"}